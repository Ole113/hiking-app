package com.hikingapp.view;

import java.awt.Image;
import java.io.IOException;
import java.net.URL;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;

/**
 * Shows the result of the timed hike.
 */
public class HikeResultFrame extends javax.swing.JFrame {

    private final int hikeTimeSeconds;
    private final String hikeImageURL;
    private final String hikeLength;
    private final String hikeAscent;
    private final String hikeDescent;
    private final String hikeName;
    private final String hikeTimeString;
    
    /**
     * Initializes the values that will be displayed and initializes the form elements.
     * @param hikeTimeSeconds The time it took to complete the hike.
     * @param hikeTimeString The string that has the time, in the format hours:minutes:seconds
     * @param hikeImageURL The URL of the hike's image.
     * @param hikeLength The length of the hike.
     * @param hikeAscent The ascent of the hike.
     * @param hikeDescent The descent of the hike.
     * @param hikeName The name of the hike.
     */
    public HikeResultFrame(int hikeTimeSeconds, String hikeTimeString, String hikeImageURL, String hikeLength, String hikeAscent, String hikeDescent, String hikeName) {
        this.hikeTimeSeconds = hikeTimeSeconds;
        this.hikeTimeString = hikeTimeString;
        this.hikeImageURL = hikeImageURL;
        this.hikeLength = hikeLength;
        this.hikeAscent = hikeAscent;
        this.hikeDescent = hikeDescent;
        this.hikeName = hikeName;
        initComponents();
    }

    /**
     * The average speed of the hike.
     * @return Hike Speed.
     */
    private String getHikeSpeed() {
        return "Average speed: " + Double.toString(Double.parseDouble(this.hikeLength) / this.hikeTimeSeconds) + " MPH";
    }
    
    /**
     * The distance that is hiked.
     * @return String that has the distance hiked.
     */
    private String getHikeDistance() {
        return "Total distance hiked: " + this.hikeLength + " miles";
    }
    
    /**
     * The time it took to do the hike.
     * @return Total hike time taken.
     */
    private String getHikeTime() {
        return "Total hike time: " + this.hikeTimeString;
    }
    
    /**
     * Gets the name of the hike.
     * @return Hike Name.
     */
    private String getHikeName() {
        return this.hikeName;
    }
    
    /**
     * The ascent of the hike.
     * @return Hike Ascent.
     */
    private String getHikeAscent() {
        return "Hike Ascent: " + this.hikeAscent;
    }
    
    /**
     * The descent of the hike.
     * @return Hike Descent.
     */
    private String getHikeDescent() {
        return "Hike Descent: " + this.hikeDescent;
    }
    
    /**
     * Sets the icon on the image variable.
     * @return Empty string but sets the hike image.
     */
    private String getHikeImage() {
        try {
            URL url = new URL(hikeImageURL);
            Image imageObject = ImageIO.read(url);
            image.setIcon(new ImageIcon(imageObject));
        } catch(IOException error) {
            System.out.println("An IOException occured in getHikeImage(). " + error);
        }
        return "";
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        totalHikeTime = new javax.swing.JLabel();
        image = new javax.swing.JLabel();
        hikeDistance = new javax.swing.JLabel();
        hikeSpeed = new javax.swing.JLabel();
        name = new javax.swing.JLabel();
        hikeAscentResult = new javax.swing.JLabel();
        hikeDescentResult = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        totalHikeTime.setText(getHikeTime());

        image.setText(getHikeImage());

        hikeDistance.setText(getHikeDistance());

        hikeSpeed.setText(getHikeSpeed());

        name.setText(getHikeName());

        hikeAscentResult.setText(getHikeAscent());

        hikeDescentResult.setText(getHikeDescent());

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(totalHikeTime)
                    .addComponent(name)
                    .addComponent(image)
                    .addComponent(hikeDistance)
                    .addComponent(hikeSpeed)
                    .addComponent(hikeAscentResult)
                    .addComponent(hikeDescentResult))
                .addContainerGap(310, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(totalHikeTime)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(name)
                .addGap(9, 9, 9)
                .addComponent(image)
                .addGap(18, 18, 18)
                .addComponent(hikeDistance)
                .addGap(18, 18, 18)
                .addComponent(hikeSpeed)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(hikeAscentResult)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(hikeDescentResult)
                .addContainerGap(107, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel hikeAscentResult;
    private javax.swing.JLabel hikeDescentResult;
    private javax.swing.JLabel hikeDistance;
    private javax.swing.JLabel hikeSpeed;
    private javax.swing.JLabel image;
    private javax.swing.JLabel name;
    private javax.swing.JLabel totalHikeTime;
    // End of variables declaration//GEN-END:variables
}
